name: Build and Push Caddy with Cloudflare module

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get-latest-release.outputs.tag }}
      image_name: ${{ steps.set-image-name.outputs.image_name }}
    steps:
      - name: Get latest Caddy release tag
        id: get-latest-release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          clean_tag=${latest_release#v}  # Remove 'v' prefix
          echo "tag=${clean_tag}" >> $GITHUB_OUTPUT

      - name: Set image name
        id: set-image-name
        run: |
          name=ghcr.io/${{ github.repository_owner }}/caddy-cloudflare
          name=$(echo $name | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
          echo "image_name=${name}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm/v7, linux/arm64, linux/riscv64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{ matrix.platform != 'linux/amd64' }}
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare valid tag
        id: prepare-tag
        run: |
          sanitized_platform=$(echo "${{ matrix.platform }}" | sed 's/\//-/g')
          echo "sanitized_platform=${sanitized_platform}" >> $GITHUB_ENV

      - name: Build and push platform-specific image
        uses: docker/build-push-action@v6
        with:
          context: WebServer/docker-caddy-cloudflare
          platforms: ${{ matrix.platform }}
          push: true
          outputs: type=registry
          tags: |
            ${{ needs.prepare.outputs.image_name }}:v${{ needs.prepare.outputs.latest_tag }}-${{ env.sanitized_platform }}
          build-args: |
            CADDY_VERSION=${{ needs.prepare.outputs.latest_tag }}

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest list
        run: |
          platforms="linux/amd64 linux/arm/v7 linux/arm64 linux/riscv64"
          for platform in $platforms; do
            sanitized_platform=$(echo "$platform" | sed 's/\//-/g')
            images+=" ${{ needs.prepare.outputs.image_name }}:v${{ needs.prepare.outputs.latest_tag }}-${sanitized_platform}"
          done
          docker buildx imagetools create \
            -t ${{ needs.prepare.outputs.image_name }}:v${{ needs.prepare.outputs.latest_tag }} \
            $images

      - name: Inspect manifest
        run: |
          docker buildx imagetools inspect ${{ needs.prepare.outputs.image_name }}:v${{ needs.prepare.outputs.latest_tag }}
